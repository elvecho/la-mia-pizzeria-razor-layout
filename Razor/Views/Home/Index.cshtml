@{
     Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="style.css">
    <title>Document</title>
</head>
<body>

    <div>
        <p>1. Dichiarare una variabile valorizzandola con il nostro nome.
Dichiarare un'altra variabile valorizzandola con il nostro cognome.
Stampare il nostro nome e cognome all'interno di un tag h2</p>

        @{
            var nome = "alberto";
            var cognome = "vecchiatti";
        }
        <h2>@nome @cognome</h2>
     <div>
         <p>2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso)
Stampare dentro uno span il risultato.</p>

            @{
                int somma( int addendo1, int addendo2)
                {
                    return addendo1 + addendo2;
                }
        }
        <span>@somma(12,12)</span>
     </div>
     <div>
         <p>3. Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina</p>

            @{
                var frase = "nel mezzo del cammin di nostra vita";
                var count = frase.Split('o').Length;
                <span>@count</span>
            }

        </div>
        <div>
            <p>4. Creare una List<int> di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e mostrare in pagina solo i numeri compresi tra 20 e 70</p>
            @{
                List<int> listaInteri = new List<int>();
                Random numeroRandom = new Random();
                for(int i = 0; i < 20; i++)
                {
                   var numero = numeroRandom.Next(1, 101);
                   
                    listaInteri.Add(numero);
                }
            }
            @foreach(var numero in listaInteri)
            {
                if(numero >= 20 && numero <= 70)
                {
                    <span>@numero</span>
                }
            }
     </div>
     <div>
         <p>
             5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) con il formato anno-mese-giorno ore:minuti:secondi
        </p>
        @{
            var oraAttuale = DateTime.Now;
            <span>@oraAttuale</span>
            <span>@oraAttuale.ToString("dd-MM-yyyy HH:mm")</span>
            }
        </div>
        <div>
            <p>6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina
                a. la data di 7 giorni fa</p>

            @{
                var datadioggi = DateTime.Now;
                var datasettimanascorsa = oraAttuale.AddDays(-7);
                <span>@datasettimanascorsa</span>
            }
            <p>b. che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)</p>
           <span>@datadioggi.ToString("D")</span>
           <p>c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)</p>
            @{
               var DataFraUnAnno = datadioggi.AddYears(1);
                
                <span>@DataFraUnAnno.ToString("D");</span>
            }
     </div>
    </div>





    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script type="text/javascript" src="main.js"></script>

</body>
</html>

